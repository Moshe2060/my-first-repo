﻿**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tv.iskon.hr
* @MinSWversion: V5.0
* @Revision 1 - [73/12/2023] Blackbear199
*  - element fixes
* @Revision 0 - [13/09/2017] Blackbear199
*  - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tv.iskon.hr|timezone=Europe/Zagreb|maxdays=7|cultureinfo=hr-HR|charset=UTF-8|titlematchfactor=90|allowlastdayoverflow}
site {ratingsystem=HR|episodesystem=onscreen}
*
url_index {url|https://tv.iskon.hr/iskon/epg/method::get_entries::channels::##channel##::date::|urldate|::length::24::start::6}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
*
urldate.format {datestring|yyyy-MM-dd}
*
global_temp_1.modify {substring(scope=urlindex type=regex)|'config_site_id' "^(.*?)##"}
url_index.modify {replace(scope=urlindex)|##channel##|'global_temp_1'}
*
index_showsplit.scrub {multi|"entries":[|{|}|]}
scope.range {(splitindex)|end}
index_showsplit.modify {cleanup(style=unidecode)}
index_showsplit.modify {cleanup(style=jsondecode)}
index_temp_1.modify {substring(type=regex)|'index_showsplit' "\"start\":\"([^"]+)\""}
index_temp_1.modify {cleanup(removeduplicates link="index_showsplit")}
*index_showsplit.modify {(debug)}
end_scope
*
index_urlchannellogo.modify {substring(type=regex)|'config_site_id' "##(.*)$"}
index_urlchannellogo.modify {set|https://tv.iskon.hr/var/ezdemo_site/storage/images/tv-vodic/'index_urlchannellogo'}
*
index_start.scrub {single|"start":"||Z",|Z",}
*index_stop.scrub {single|"end":"||Z",|Z",}
index_title.scrub {single|"title":"||",|",}
index_description.scrub {single|"desc":"||",|",}
index_showicon.scrub {single|"image_path":"||"|"}
*
index_showicon.modify {addstart(not "")|https://tv.iskon.hr/var/ezdemo_site/storage/epg/}
*
scope.range {(indexshowdetails)|end}
index_description.modify {remove|\\n}
index_episode.modify {substring(pattern="S'S1', E'E1'""E'E1'" type=regex)|'index_description' "\(((?:S\d+,\s*)?E\d+),\s*[^\)]*\)"}
index_description.modify {remove('index_episode' not "")|'index_episode', }
index_productiondate.modify {substring(type=regex)|'index_description' "^[^\(]*\([^\)]+(\d{4})\)"}
index_description.modify {remove('index_productiondate' not "")|, 'index_productiondate'}
index_country.modify {substring(type=regex)|'index_description' "^[^\(]*\([^\)]*,\s([^\)]*)\)"}
index_description.modify {remove('index_country' not "")|, 'index_country'}
index_category.modify {substring(type=regex)|'index_description' "^[^\(]*\(([^\)]+)\)"}
index_description.modify {remove('index_category' not "")|('index_category')}
index_category.modify {cleanup(style=name)}
index_director.modify {substring(type=regex)|'index_description' "R\.:(.+?)(?:Ul\.:\|$)"}
index_description.modify {remove('index_director' not "")|R.:'index_director'}
index_director.modify {replace|, |\|}
index_actor.modify {substring(type=regex)|'index_description' "Ul\.:(.+?)\.*$"}
index_description.modify {remove('index_actor' not "")|Ul.:'index_actor'}
index_description.modify {replace(type=regex)|"\s{2,}"| }
index_description.modify {remove(type=regex)|"\s\.+$"}
index_actor.modify {replace|, |\|}
index_actor.modify {remove(type=regex)|"\.*$"}
index_actor.modify {replace| (|(role=}
end_scope
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|https://tv.iskon.hr/iskon/epg/method::get_init}
*index_site_id.scrub {regex||\{"id":"(\d+","title":"[^"]*","ott_enabled":"[^"]*","recordable":"[^"]*","timeshift":"[^"]*(?:","image_logo":"[^"]*)?)","free_streaming":||}
*index_site_channel.scrub {regex||\{"id":"\d+","title":"([^"]*)","ott_enabled"||}
*index_site_channel.modify {cleanup(style=unidecode)}
*index_site_channel.modify {cleanup(style=jsondecode)}
*index_site_id.modify {cleanup(style=jsondecode)}
*index_site_id.modify {replace(type=regex)|"^[^\"]*(\",.+?var/ezdemo_site/storage/images/tv-vodic/)"|##}
*index_site_id.modify {remove(type=regex)|"^\d+(\".*)$"}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
