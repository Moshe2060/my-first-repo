**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: xumo.com
* @MinSWversion: V5.0
* @Revision 1 - [05/10/2024] Blackbear199
* - bug fixes
* @Revision 0 - [04/10/2024] Blackbear199
* - creation
* @Remarks: grab as few days as possible
*           the more days grabbed the slower processing will be.
* @header_end
**------------------------------------------------------------------------------------------------
site {url=xumo.com|timezone=UTC|maxdays=7|cultureinfo=en-US|charset=UTF-8|titlematchfactor=90|allowlastdayoverflow}
site {ratingsystem=MPAA|episodesystem=onscreen}
*
scope.range {(urlindex)|end}
url_index {url|https://valencia-app-mds.xumo.com/v2/epg/10006/|urldate|/|subpage|.json?f=asset.title&f=asset.descriptions&limit=50&offset=##offset##}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
global_temp_1.modify {substring(type=regex)|'config_site_id' "^\d+"}
global_temp_2.modify {substring(type=regex)|'config_site_id' "^\d+##(\d+)"}
global_temp_3.modify {substring(type=regex)|'config_site_id' "\d+$"}
url_index.modify {replace|##offset##|'global_temp_3'}
end_scope
*
urldate.format {datestring|yyyyMMdd}
subpage.format {list|0|1|2|3}
*
scope.range {(datelogo)|1}
index_urlchannellogo.modify {set|https://image.xumo.com/v1/channels/channel/'global_temp_1'/56x56.webp?type=color_onBlack}
*
scope.range {(splitindex)|end}
index_variable_element.scrub {regex||"assets":(\{.*?\})\}\}\}||}
index_variable_element.modify {replace(type=regex)|"\}(,)\"[^\"]*\":\{\"title\""|\|}
index_variable_element.modify {cleanup(style=jsondecode)}
index_showsplit.scrub {regex||"number":'global_temp_2',"schedule":\[(.*?)\]\}||}
index_showsplit.modify {replace|\},\{|\}\|\{}
index_showsplit.modify {remove(type=element)|-1 1}
*
loop {(each 'index_temp_9' in 'index_showsplit')|end}
index_temp_8.modify {substring(type=regex)|'index_temp_9' "\"assetId\":\"([^\"]*)"}
index_temp_8.modify {cleanup(removeduplicates)}
index_temp_7.modify {substring(type=regex)|'index_variable_element' "\"'index_temp_8'\":(\{.*?\})"}
index_temp_7.modify {cleanup(removeduplicates)}
index_temp_8.modify {addend('index_temp_7' not "")|'index_temp_9','index_temp_7'}
index_temp_6.modify {addend|'index_temp_8'####}
end_loop
index_showsplit.modify {substring(type=regex)|'index_temp_6' "(.*?)####"}
*
index_temp_1.modify {substring(type=regex)|'index_showsplit' "\"start\":\"([^\"]*)"}
index_temp_1.modify {cleanup(removeduplicates link="index_showsplit")}
*index_showsplit.modify {(debug)}
end_scope
*
scope.range {(indexshowdetails)|end}
index_start.scrub {single(separator="+" include=first)|"start":"||"|"}
index_stop.scrub {single(separator="+" include=first)|"end":"||"|"}
index_title.scrub {single|"title":"||",|",}
index_subtitle.scrub {single|"episodeTitle":"||",|",}
index_description.scrub {single|"medium":"||"}|"}}
index_temp_2.scrub {regex||"small":"(.*?)"(?:,"\|\})||}
index_temp_3.scrub {regex||"timy":"(.*?)"(?:,"\|\})||}
*
index_description.modify {set(['index_description' ""] ['index_temp_2' not ""] &)|'index_temp_2'}
index_description.modify {set(['index_description' ""] ['index_temp_3' not ""] &)|'index_temp_3'}
end_scope
** _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
** ##### CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
** @auto_xml_channel_start
*scope.range {(urlindex)|end}
*url_index {url|https://valencia-app-mds.xumo.com/v2/proxy/channels/list/10006.json?sort=hybrid&geoId=2f08a9b3}
*url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*end_scope
*subpage.format {list|}
*scope.range {(channellist)|end}
*index_site_id.scrub {regex||"guid":\{"value":"(\d+.*?"number":\d+)||}
*index_site_channel.scrub {multi|"title":"||"}|"}}
*index_site_id.modify {replace(type=regex)|"^\d+(.*?)\d+$"|##}
*index_temp_6.modify {clear}
*index_temp_5.modify {clear}
*index_temp_4.modify {clear}
*index_temp_3.modify {clear}
*index_temp_9.modify {substring(type=regex)|'index_site_id' "\d+$"}
*index_temp_9.modify {sort(ascending,integer)}
*sort_by.scrub {single(target="index_temp_9")||||}
*loop{(each "index_temp_8" in 'index_temp_9')|end}
*index_temp_7.modify {clear}
*index_temp_8.modify {substring(type=regex)|'index_site_id' "^\d+##'index_temp_8'$"}
*index_temp_7.modify {calculate(format=F0 type=element)|'index_site_id' 'index_temp_8' @}
*index_temp_6.modify {substring(type=element)|'index_site_id' 'index_temp_7' 1}
*index_temp_5.modify {substring(type=element)|'index_site_channel' 'index_temp_7' 1}
*index_temp_4.modify {addend|'index_temp_6'#_#}
*index_temp_3.modify {addend|'index_temp_5'#_#}
*end_loop
*index_site_id.modify {substring(type=regex)|'index_temp_4' "(.*?)#_#"}
*index_site_channel.modify {substring(type=regex)|'index_temp_3' "(.*?)#_#"}
*index_temp_1.modify {clear}
*index_temp_2.modify {clear}
*index_temp_9.modify {clear}
*index_temp_8.modify {clear}
*index_temp_1.modify {set|0}
*index_temp_2.modify {calculate(format=F0 type=element)|'index_site_id' #}
*loop {('index_temp_1' < 'index_temp_2')|end}
*index_temp_9.modify {substring(type=element)|'index_site_id' 'index_temp_1' 1}
*if {('index_temp_1' < "50")|1}
*index_temp_9.modify {addend|##0}
*if {(['index_temp_1' > "49"] ['index_temp_1' < "100"] &)|1}
*index_temp_9.modify {addend|##50}
*if {(['index_temp_1' > "99"] ['index_temp_1' < "150"] &)|1}
*index_temp_9.modify {addend|##100}
*if {(['index_temp_1' > "149"] ['index_temp_1' < "200"] &)|1}
*index_temp_9.modify {addend|##150}
*if {(['index_temp_1' > "199"] ['index_temp_1' < "250"] &)|1}
*index_temp_9.modify {addend|##200}
*if {(['index_temp_1' > "249"] ['index_temp_1' < "300"] &)|1}
*index_temp_9.modify {addend|##250}
*if {(['index_temp_1' > "299"] ['index_temp_1' < "350"] &)|1}
*index_temp_9.modify {addend|##300}
*if {('index_temp_1' > "349")|1}
*index_temp_9.modify {addend|##350}
*index_temp_8.modify {addend|'index_temp_9'####}
*index_temp_1.modify {calculate(format=F0)|1 +}
*end_loop
*index_site_id.modify {substring(type=regex)|'index_temp_8' "(.*?)####"}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
