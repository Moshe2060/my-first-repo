**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: kpn.com
* @MinSWversion: V5.0
* @Revision 2  - [19/07/2024] Blackbear199
*   - jsondecode details data
* @Revision 1  - [06/07/2024] Blackbear199
*   - url change
*   - channel logo fix
*   - showplit fix
* @Revision 0  - [02/01/2022] Mat8861 / Blackbear199
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=kpn.com|timezone=UTC|maxdays=7|cultureinfo=nl-NL|charset=UTF-8|titlematchfactor=90|ratingsystem=Kijkwijzer}
site {episodesystem=onscreen}
*
url_index {url|https://api-avs67.tv.prod.itvavs.prod.aws.kpn.com/101/1.2.0/A/nld/pctv/kpn/TRAY/EPG?filter_day=|urldate|&filter_channelIds=|channel|&extendedChannelMetadata=true}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
urldate.format {daycounter|0}
*
index_urlchannellogo {url|https://images.tv.kpn.com/logo/dtvchannels_|"orderId":||,|,}
index_urlchannellogo.modify {addend(not "")|/48.png}
*
index_showsplit.scrub {multi|},"containers":[||]}]},|]}]},}
scope.range {(splitindex)|end}
index_showsplit.modify {replace|\},\{"id":|\}\|\{"id":}
index_temp_1.modify {substring(type=regex)|'index_showsplit' "\"airingStartTime\":(\d+)"}
index_temp_1.modify {cleanup(removeduplicates link="index_showsplit")}
index_showsplit.modify {cleanup(style=unidecode)}
index_showsplit.modify {cleanup(style=jsondecode)}
*index_showsplit.modify {(debug)}
end_scope
*
index_start.scrub {single|"airingStartTime":||,"|,"}
index_stop.scrub {single|"airingEndTime":||,"|,"}
index_title.scrub {single|"title":"||",|",}
index_subtitle.scrub{single|"episodeTitle":"||",|",}
index_starrating.scrub {regex||"starRating":([1-9]\d*),"||}
index_productiondate.scrub {single|"year":"||",|",}
index_presenter.scrub {single(separator="","")|"presenters":["||"]|"]}
index_category.scrub {single|<span class="genre">||</span>}
index_description.scrub {single|<p class="description|">|</p>|</p>}
index_showicon.scrub {url|https://images.tv.kpn.com/epg/|"pictureUrl":"||",|",}
index_episode.scrub {regex(pattern="S'S1' E'E1'""S'S1'""E'E1'")||"episodeNumber":([1-9]\d*)||}
index_temp_2.scrub {regex||"season":([1-9]\d*)||}
*
index_subtitle.modify {clear('index_title')}
index_description.modify {remove('index_urlshow' not "")|'index_description'}
index_episode.modify {addstart(not "")|E}
index_temp_2.modify {remove(type=regex)|"\d{4}"}
index_episode.modify {addstart('index_temp_2' not "")|S'index_temp_2'}
index_showicon.modify {addend(not "")|/1920x1080.jpg}
*
index_urlshow {url|https://api-avs67.tv.prod.itvavs.prod.aws.kpn.com/101/1.2.0/A/nld/pctv/kpn/CONTENT/DETAIL/PROGRAM/|"id":"||",|",}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
title.scrub {single|"title":"||",|",}
description.scrub {single|"longDescription":"||",|",}
category.scrub {single(separator="","" max=2)|"genres":["||"]|"]}
director.scrub {single(separator="","")|"directors":["||"]|"]}
actor.scrub {single(separator="","")|"actors":["||"]|"]}
producer.scrub {single(separator="","")|"authors":["||"]|"]}
rating.scrub {regex||"pcLevel":(\d+),"||}
temp_1.scrub {single|"shortDescription":"||",|",}
*
loop {('description' "" max=1)|1}
description.modify {addstart('temp_1' not "")|'temp_1'}
rating.modify {replace|0|AL}
rating.modify {replace|99|AL}
*
title.modify {cleanup(style=jsondecode)}
description.modify {cleanup(style=jsondecode)}
director.modify {cleanup(style=jsondecode)}
actor.modify {cleanup(style=jsondecode)}
producer.modify {cleanup(style=jsondecode)}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|https://api-avs67.tv.prod.itvavs.prod.aws.kpn.com/101/1.2.0/A/nld/pctv/kpn/TRAY/LIVECHANNELS??orderBy=orderId&sortOrder=asc&from=0&to=999}
*index_site_id.scrub {multi|channelId":||,|,}
*index_site_channel.scrub {multi|"channelName":"||",|",}
*index_site_channel.modify {replace|'|â€™}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
