﻿﻿**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: movistarplus.es
* @MinSWversion: V5.0
* @Revision 22 - [15/11/2024] Mat8861 *change url, no writer,compositor,producer
* @Revision 21 - [30/03/2024] Blackbear199
*  - subtitle/episode info fix
*  - add Live(Vivo)
* @Revision 20 - [27/03/2024] Blackbear199
*  - add index_category
*  - use landscape image for sports(Deportes)
* @Revision 19 - [09/14/2023] Blackbear199
*  - skip first show
*  - channel list fix
* @Revision 18 - [09/12/2023] Blackbear199
*  - showsplit fix
* @Revision 17 - [28/03/2023] Blackbear199
*  - ini update
* @Revision 16 - [28/04/2022] Blackbear199
*  - titleoriginal improvements
* @Revision 15 - [24/06/2019] Blackbear199
*  - rewrite
* @Revision 14 - [03/08/2018] Blackbear199
*  - rewrite(new epg data format)
* @Remarks: use timezone of pc running webgrab for timezone setting
*           episodesystem=onscreen only
* @header_end
**------------------------------------------------------------------------------------------------
site {url=movistarplus.es|timezone=UTC|maxdays=7|cultureinfo=es-ES|charset=UTF-8|titlematchfactor=90|nopageoverlaps|allowlastdayoverflow|firstshow=1}
site {ratingsystem=ES|episodesystem=onscreen}
*
url_index                  {url|https://ottcache.dof6.com/movistarplus/webplayer/OTT/epg?from=|urldate|&channel=|channel|}
url_index.headers          {customheader=Accept-Encoding=gzip,deflate,br}
*
urldate.format             {datestring|yyyy-MM-dd}
*
index_urlchannellogo.modify{set|https://www.movistarplus.es/recorte/m-NEO/guiapc/'config_site_id'.png}
*
global_temp_1.modify       {set|'config_site_id'}
index_showsplit.scrub      {regex||\{"CodEventoRejilla":.*?"Seguible":[^\}]*\}||}
scope.range                {(splitindex)|end}
index_showsplit.modify     {replace(type=regex)|"\!\?\?\!"|-}
index_showsplit.modify     {cleanup(style=unidecode)}
index_showsplit.modify     {cleanup(style=jsondecode)}
index_temp_1.modify        {substring(type=regex)|'index_showsplit' "\"HORA_INICIO\":\"(\d+:\d+)\""}
index_temp_1.modify        {cleanup(removeduplicates span=1 link="index_showsplit")}
**index_showsplit.modify    {(debug)}
end_scope
*
index_urlshow              {url||"Ficha":"||"|"}
index_urlshow.headers      {customheader=Accept-Encoding=gzip,deflate,br}
*
index_start.scrub          {single|"FechaHoraInicio":"||",|",}
index_stop.scrub		   {single|"FechaHoraFin":"||",|",}
index_title.scrub          {single|"Titulo":"||",|",}
index_category.scrub       {single|"GeneroComAntena":"||",|",}
index_videoquality.scrub   {single|"FormatoVideo":"||",|",}
index_premiere.scrub       {regex||"Directo":(true)||}
index_premiere.modify      {addend|(lang=null)}
*
scope.range                {(indexshowdetails)|end}
index_title.modify         {remove(type=regex)|"(?:\s*\(T?\d+\))?:\sEp\.?\s*\d+.*$\|\s\(Temp\.?\s\d+\):.*$\|:\sEpisodio \d+"}
index_title.modify         {remove|CINE: }
index_title.modify         {remove|Cine: }
index_title.modify         {remove(type=regex)|"\s*\([^\)]*\)"}
end_scope
*
subtitle.scrub             {single|"TituloEpisodio":"||",|",}
description.scrub          {single|"Competicion":|"Descripcion":"|","|","}
director.scrub             {single(separator="," max=2)|"Directores":"||",|",}
actor.scrub                {single(separator="," max=6)|"Actores":"||",|",}
*producer.scrub             {multi|}
*writer.scrub               {multi|}
*composer.scrub             {multi|}
rating.scrub               {single|"NivelMoral":{|"Id":"|","|}}
ratingicon.scrub           {regex||"NivelMoral":\{"_id":"[^"]*","Id":"[^"]*","Logo":"([^"]*)"\}||}
starrating.scrub           {single|"Valoracion":{|"Valoracion":|,"|,"}
starrating.modify          {addend('starrating' not "")|/10}
category.scrub             {single(separator=",")|"Genero":{"ComAntena":"||"}|"}}
productiondate.scrub       {single|"Anno":"||",|",}
country.scrub              {single(separator="," max=2)|"Nacionalidad":"||",|",}
showicon.scrub             {single|"Imagen":"||",|",}
temp_1.scrub               {regex||"Titulo":"([^"]*)","||}
temp_2.modify               {substring(type=regex)|'temp_1' "\s*(\(T?\d+(?:\/\d+)?\):(?:\s*Ep\.\d+)?)\s*"}
episode.modify				{addend|'temp_2'}
*
scope.range                {(showdetails)|end}
title.modify               {addstart|'index_title'}
subtitle.modify            {clear('title')}
title.modify               {remove('subtitle' not "")|: 'subtitle'}
episode.modify             {remove(type=regex)|"\(\d{4}\):\s*"}
episode.modify             {remove(type=regex)|"[\(\):]"}
episode.modify             {replace(type=regex)|"^(T?.*?)\d+"|T}
episode.modify             {replace(type=regex)|Ep.|E}
*
* use landscape image for sports(Deportes),selects last image in gallery
if                         {(['index_category' "Deportes"] ['temp_2' not ""] &)|end}
showicon.modify            {substring(type=element)|'temp_2' -1 1}
end_if
end_scope
subtitle.modify		       {cleanup(style=jsondecode)}
description.modify		   {cleanup(style=jsondecode)}
description.modify		   {remove|\\n}
subtitle.modify            {remove(type=regex)|"(?:\s*\(T?\d+\))?:\sEp\.?\s*\d+.*$\|\s\(Temp\.?\s\d+\):.*$\|:\sEpisodio \d+"}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index                  {url|https://www.movistarplus.es/programacion-tv/|urldate|?v=json}
*index_site_id.scrub      {regex||"([^"]*)-CODE":||}
*index_site_channel.scrub {regex||"NOMBRE":"([^"]*","URL":"[^"]*","DIAL_PRINCIPAL":\["[^"]*"\])||}
*index_site_channel.modify{replace(type=regex)|"^[^\"]*(\",\"URL\":\"[^\"]*\",\"DIAL_PRINCIPAL\":)"| }
*index_site_channel.modify{remove|"}
*index_site_channel.modify{remove(type=regex)|"\\[tn]"}
*index_site_channel.modify{cleanup(style=unidecode)}
*index_site_id.modify     {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
