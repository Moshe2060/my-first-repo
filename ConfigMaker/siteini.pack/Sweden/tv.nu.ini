**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tv.nu
* @MinSWversion: V5.0
* @Revision 19 - [30/04/2024]  Blackbear199
*	 category fix
* @Revision 18 - [02/04/2023]  Blackbear199
*	 showsplit change(again)
* @Revision 17 - [04/03/2023]  Blackbear199
*	 showsplit fix,urlshow fix for sports
* @Revision 16 - [21/08/2022]  Mat8861*fix urlshow
* @Revision 15 - [18/08/2022]  Blackbear199
*	 cvhannel creation,actor fix
* @Revision 14 - [09/09/2020]  Blackbear199
*	site changes
* @Revision 13 - [26/01/2019]  Blackbear199
*	showsplit,index_urlshow fix
* @Revision 12 - [16/01/2019]  Blackbear199
*	rewrite
* @Revision 11 - [07/01/2018]  Blackbear199
*	add subdetails page(easier element scrub)
* @Revision 10 - [06/10/2017]  Blackbear199
*	channels xml creation fix
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tv.nu|timezone=UTC|maxdays=8|cultureinfo=sv-SE|charset=UTF-8|titlematchfactor=0|allowlastdayoverflow}
site {ratingsystem=Imdb|episodesystem=onscreen}
*
url_index                 {url|https://web-api.tv.nu/channels/|channel|/schedule?date=|urldate|&fullDay=true}
url_index.headers         {customheader=Accept-Encoding=gzip,deflate,br}
*
urldate.format            {datestring|yyyy-MM-dd}
*
index_urlchannellogo.scrub{regex||^.*?themedLogo":\{"light":\{"url":"([^"]*)"||}
*
index_showsplit.scrub     {regex||"broadcasts":\[(\{.*?\})\]\}\}||}
index_showsplit.modify    {replace|\},\{"type":|\}\|\{"type":}
index_showsplit.modify    {cleanup(style=jsondecode)}
*index_showsplit.modify   {(debug)}
*
index_start.scrub         {regex||"startTime":(\d+)||}
index_stop.scrub          {regex||"endTime":(\d+)||}
index_title.scrub         {single|"title":"||",|",}
index_description.scrub   {single|"description":"||",|",}
index_category.scrub      {multi|"genres":[|"name":"|"|]}
index_category.scrub      {single(include="true")|"isMovie":||,|,}
index_episode.scrub       {regex(pattern="S'S1'E'E1'/'Et1'""S'S1'E'E1'""S'S1'""E'E1'")||"episodeNumber":([1-9]\d*)||}
index_productiondate.scrub{single|"year":||,|,}
index_starrating.scrub    {single|"imdb":{"rating":"||",|",}
index_temp_1.scrub        {regex||"type":"([^"]*","id":"[^"]*)"||}
index_temp_2.scrub        {single|"broadcastId":"||"|"} *sports(C More Live,ect)
index_temp_3.scrub        {regex||"seasonNumber":([1-9]\d*)||}
index_temp_4.scrub        {regex||"totalEpisodes":([1-9]\d*)||}
*
scope.range {(indexshowdetails)|end}
index_temp_1.modify       {replace|","id":"|/}
index_temp_1.modify       {addend('index_temp_2' not "")|?broadcastId='index_temp_2'}
*end_if
index_category.modify     {replace|true|Movie}
index_temp_5.modify       {set|'index_episode'}
index_episode.modify      {addstart(not "")|E}
index_episode.modify      {addend('index_temp_4' not "")|/'index_temp_4'}
index_episode.modify      {addstart('index_temp_3' not "")|S'index_temp_3'}
*
index_urlshow.modify      {addstart('index_temp_1' not "")|https://web-api.tv.nu/details/'index_temp_1'}
index_urlshow.headers     {customheader=Accept-Encoding=gzip,deflate,br}
*
index_description.modify  {remove('index_urlshow' not "")|'index_description'}
end_scope
description.scrub         {single|"description":"||",|",}
director.scrub            {regex||\{"name":"([^"]*)","slug":"[^"]*","role":"Regissör","image":"[^"]*"\}||}
actor.scrub               {regex||\{("name":"[^"]*","slug":"[^"]*","role":"(?:Röst\|Gäst\|Skådespelare\|Gäststjärna)","image":"[^"]*"(?:,"characterName":"[^"]*")?)\}||}
producer.scrub            {regex||\{"name":"([^"]*)","slug":"[^"]*","role":"(?:Producent\|Exekutiv producent)","image":"[^"]*"\}||}
writer.scrub              {regex||\{"name":"([^"]*)","slug":"[^"]*","role":"(?:Screenwriter\|Författare\|Writer)","image":"[^"]*"\}||}
composer.scrub            {regex||\{"name":"([^"]*)","slug":"[^"]*","role":"Originalmusik","image":"[^"]*"\}||}
country.scrub             {single(separator="","")|"countries":["||"]|"]}
showicon.scrub            {single|"imageLandscape":"||"|"}
temp_2.scrub              {multi(separator="},{"type":")|"episodes":[{||}]},"keywords"|}]},"keywords"}
*
title.modify              {addstart|'index_title'}
subtitle.modify           {substring('temp_2' not "" type=regex)|'temp_2' "^.*?"title":"(.*?)",".*?"episodeNumber":'index_temp_5',"seasonNumber":'index_temp_3'$"}
description.modify        {cleanup(style=jsondecode)}
if                        {('actor' not "")|end}
loop                      {(each "temp_9" in 'actor')|end}
temp_8.modify             {substring(type=regex)|'temp_9' "\"name\":\"(.*?)\",\""}
temp_7.modify             {substring(type=regex)|'temp_9' "\"characterName\":\"(.*?)\"$"}
temp_8.modify             {addend('temp_7' not "")|(role='temp_7')}
temp_6.modify             {addend|'temp_8'#_#}
end_loop
actor.modify              {substring(type=regex)|'temp_6' "(.*?)#_#"}
actor.modify              {substring(type=element)|0 8}
end_if
director.modify           {substring(type=element)|0 2}
producer.modify           {substring(type=element)|0 2}
writer.modify             {substring(type=element)|0 2}
composer.modify           {substring(type=element)|0 2}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index               {url|https://www.tv.nu/sitemap}
*index_site_id.scrub     {multi|\"slug\":\"kanaler\",\"urls\":[|\"url\":\"\\u002Fkanal\\u002F|\",|]}
*index_site_channel.scrub{multi|\"slug\":\"kanaler\",\"urls\":[|\"title\":\"|\"|]}
*index_site_id.modify    {cleanup(removeduplicates=equal,100 link="index_site_channel")}
** @auto_xml_channel_end
